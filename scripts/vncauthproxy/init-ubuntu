#! /bin/sh
### BEGIN INIT INFO
# Provides:             vncauthproxy
# Required-Start:       $remote_fs $syslog
# Required-Stop:        $remote_fs $syslog
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description: Start vncauthproxy as a service
# Description:       Starts vncauthproxy as a service. Additional
#	information can be found at
#	https://code.osuosl.org/projects/twisted-vncauthproxy/
### END INIT INFO

# Author: Evan Tschuy <tschuy@osuosl.org>

DESC="VNC Auth Proxy"
NAME="vncauthproxy"
PIDFILE=/var/run/vncauthproxy/proxy.pid
LOGFILE=/var/log/vncauthproxy/proxy.log
DAEMON="/opt/ganeti_webmgr/bin/twistd"
TWISTD_ARGS=" --pidfile=$PIDFILE --logfile=$LOGFILE vncap"
VNCAP_ARGS=" -c tcp:8888:interface=0.0.0.0"
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
if [ ! -x "$DAEMON" ]; then
	exit 0
fi

. /lib/init/vars.sh
. /lib/lsb/init-functions

RETURNVAL=0

#
# Function that sets up log and pid folders
#
check_config()
{
	if [ ! -d /var/run/vncauthproxy ] ; then
		mkdir -p /var/run/vncauthproxy
	fi
	if [ ! -d /var/log/vncauthproxy ] ; then
		mkdir -p /var/log/vncauthproxy
	fi
}

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	check_config

	start-stop-daemon --start --quiet --exec $DAEMON -- $DAEMON_ARGS $TWISTD_ARGS $VNCAP_ARGS > /dev/null
	return "$?"
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred

	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE > /dev/null
	RETURNVAL="$?"
	rm -f $PIDFILE
	return "$RETURNVAL"
}

case "$1" in
  start)
	echo "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0) echo "Daemon started successfully" ;;
		1) echo "Daemon already running" ;;
		2) echo "Unable to start daemon" ;;
	esac
	;;
  stop)
	echo "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0) echo "Daemon stopped successfully" ;;
		1) echo "Daemon not running" ;;
		2) echo "Unable to stop daemon" ;;
	esac
	;;
  status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;
  restart|force-reload)
	echo "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) echo "Daemon started successfully" ;;
			1) echo "Daemon is already running" ;; # Old process is running
			*) echo "Daemon failed to start" ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		echo "Daemon failed to stop"
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
